import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class AttendanceTable extends StatefulWidget {
  @override
  _AttendanceTableState createState() => _AttendanceTableState();
}

class _AttendanceTableState extends State<AttendanceTable> {
  List<Map<String, dynamic>> usersWithAttendance = [];

  @override
  void initState() {
    super.initState();
    _fetchAttendanceData();
  }

  Future<void> _fetchAttendanceData() async {
    // Fetch data from fetchUsersWithTimeEntriesForCurrentWeek
    List<Map<String, dynamic>> data = await fetchUsersWithTimeEntriesForCurrentWeek();
    setState(() {
      usersWithAttendance = data;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Container(
        decoration: BoxDecoration(
          color: Colors.grey.shade300,
          borderRadius: BorderRadius.circular(16.0),
        ),
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'This week',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 10),
            Table(
              columnWidths: const {
                0: FlexColumnWidth(3),
                1: FlexColumnWidth(1),
                2: FlexColumnWidth(1),
                3: FlexColumnWidth(1),
                4: FlexColumnWidth(1),
                5: FlexColumnWidth(1),
              },
              children: _buildTableRows(),
            ),
          ],
        ),
      ),
    );
  }

  List<TableRow> _buildTableRows() {
    List<TableRow> rows = [
      TableRow(
        children: [
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('Days', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('M', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('T', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('W', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('T', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
          const Padding(
            padding: EdgeInsets.all(8.0),
            child: Text('F', style: TextStyle(fontWeight: FontWeight.bold)),
          ),
        ],
      ),
    ];

    for (var user in usersWithAttendance) {
      String name = '${user['user']['firstName']} ${user['user']['lastName']}';
      List<Map<String, dynamic>> timeEntries = user['timeEntries'];

      rows.add(_buildTableRow(name, timeEntries));
    }

    return rows;
  }

  TableRow _buildTableRow(String name, List<Map<String, dynamic>> timeEntries) {
    List<Widget> rowCells = [
      Padding(
        padding: const EdgeInsets.all(8.0),
        child: Text(name),
      ),
    ];

    DateTime now = DateTime.now();
    DateTime monday = now.subtract(Duration(days: now.weekday - 1));

    for (int i = 0; i < 5; i++) {
      DateTime day = monday.add(Duration(days: i));
      DateTime cutoffTime = DateTime(day.year, day.month, day.day, 17, 0); // 5:00 PM

      Widget icon;
      if (now.isBefore(day)) {
        icon = Icon(Icons.access_time, color: Colors.grey); // Clock icon for future days
      } else if (timeEntries.any((entry) =>
          entry['date'].toDate().year == day.year &&
          entry['date'].toDate().month == day.month &&
          entry['date'].toDate().day == day.day)) {
        icon = Icon(Icons.circle, color: Colors.green); // Green circle for clocked in
      } else if (now.isAfter(cutoffTime)) {
        icon = Icon(Icons.circle, color: Colors.red); // Red circle for missing clock-in after 5:00 PM
      } else {
        icon = Icon(Icons.access_time, color: Colors.grey); // Clock icon for future days
      }

      rowCells.add(Padding(padding: const EdgeInsets.all(8.0), child: icon));
    }

    return TableRow(children: rowCells);
  }
Future<List<Map<String, dynamic>>> fetchUsersWithTimeEntriesForCurrentWeek() async {
  return [
    {
      'user': {
        'firstName': 'David',
        'lastName': 'Acheampong',
        'phoneNumber': '022436595',
        'role': 'user',
        'deviceId': 'HONORCRT-N31',
        'email': 'kokot@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724051033, 360000000), // Monday
          'clockedOut': Timestamp(1724051038, 437000000),
          'clockedIn': Timestamp(1724051034, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Linda',
        'lastName': 'Baidoo',
        'phoneNumber': '027859851',
        'role': 'user',
        'deviceId': 'HONORCRT-N31',
        'email': 'linda@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
        {
          'date': Timestamp(1724223833, 360000000), // Wednesday
          'clockedOut': Timestamp(1724223838, 437000000),
          'clockedIn': Timestamp(1724223834, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Ernest',
        'lastName': 'Adjei',
        'phoneNumber': '0247896321',
        'role': 'user',
        'deviceId': 'SAMSUNGGalaxyA12',
        'email': 'ernest@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724310233, 360000000), // Thursday
          'clockedOut': Timestamp(1724310238, 437000000),
          'clockedIn': Timestamp(1724310234, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Jennifer',
        'lastName': 'Owusu',
        'phoneNumber': '0501234567',
        'role': 'user',
        'deviceId': 'XIAOMIMiNote10',
        'email': 'jennifer@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724051033, 360000000), // Monday
          'clockedOut': Timestamp(1724051038, 437000000),
          'clockedIn': Timestamp(1724051034, 981000000),
        },
        {
          'date': Timestamp(1724223833, 360000000), // Wednesday
          'clockedOut': Timestamp(1724223838, 437000000),
          'clockedIn': Timestamp(1724223834, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Michael',
        'lastName': 'Asante',
        'phoneNumber': '0209876543',
        'role': 'user',
        'deviceId': 'TECNO-CAMON12',
        'email': 'michael@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
        {
          'date': Timestamp(1724310233, 360000000), // Thursday
          'clockedOut': Timestamp(1724310238, 437000000),
          'clockedIn': Timestamp(1724310234, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Sophia',
        'lastName': 'Adomako',
        'phoneNumber': '0241122334',
        'role': 'user',
        'deviceId': 'INFINIX-HOT8',
        'email': 'sophia@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724051033, 360000000), // Monday
          'clockedOut': Timestamp(1724051038, 437000000),
          'clockedIn': Timestamp(1724051034, 981000000),
        },
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
        {
          'date': Timestamp(1724310233, 360000000), // Thursday
          'clockedOut': Timestamp(1724310238, 437000000),
          'clockedIn': Timestamp(1724310234, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Kojo',
        'lastName': 'Mensah',
        'phoneNumber': '0556677889',
        'role': 'user',
        'deviceId': 'ITEL-Vision1Pro',
        'email': 'kojo@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724223833, 360000000), // Wednesday
          'clockedOut': Timestamp(1724223838, 437000000),
          'clockedIn': Timestamp(1724223834, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Kofi',
        'lastName': 'Antwi',
        'phoneNumber': '0571234567',
        'role': 'user',
        'deviceId': 'SAMSUNGGalaxyA51',
        'email': 'kofi@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724051033, 360000000), // Monday
          'clockedOut': Timestamp(1724051038, 437000000),
          'clockedIn': Timestamp(1724051034, 981000000),
        },
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Esi',
        'lastName': 'Adjei',
        'phoneNumber': '0270123456',
        'role': 'user',
        'deviceId': 'NOKIA-C2',
        'email': 'esi@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
        {
          'date': Timestamp(1724223833, 360000000), // Wednesday
          'clockedOut': Timestamp(1724223838, 437000000),
          'clockedIn': Timestamp(1724223834, 981000000),
        },
        {
          'date': Timestamp(1724310233, 360000000), // Thursday
          'clockedOut': Timestamp(1724310238, 437000000),
          'clockedIn': Timestamp(1724310234, 981000000),
        },
      ],
    },
    {
      'user': {
        'firstName': 'Ama',
        'lastName': 'Koranteng',
        'phoneNumber': '0267890123',
        'role': 'user',
        'deviceId': 'HUAWEI-Y7',
        'email': 'ama@ymail.com',
      },
      'timeEntries': [
        {
          'date': Timestamp(1724051033, 360000000), // Monday
          'clockedOut': Timestamp(1724051038, 437000000),
          'clockedIn': Timestamp(1724051034, 981000000),
        },
        {
          'date': Timestamp(1724137433, 360000000), // Tuesday
          'clockedOut': Timestamp(1724137438, 437000000),
          'clockedIn': Timestamp(1724137434, 981000000),
        },
        {
          'date': Timestamp(1724223833, 360000000), // Wednesday
          'clockedOut': Timestamp(1724223838, 437000000),
          'clockedIn': Timestamp(1724223834, 981000000),
        },
        {
          'date': Timestamp(1724310233, 360000000), // Thursday
          'clockedOut': Timestamp(1724310238, 437000000),
          'clockedIn': Timestamp(1724310234, 981000000),
        },
      ],
    },
  ];
}

}
